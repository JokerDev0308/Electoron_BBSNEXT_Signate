{
  "name": "elecom-windows-signage",
  "productName": "elecom-windows-signage",
  "description": "Elecom Windows Signage",
  "scripts": {
    "build": "concurrently \"yarn build-main\" \"yarn build-renderer\"",
    "build:static": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.renderer.prod.static.babel.js --colors",
    "build-dll": "cross-env NODE_ENV=development webpack --config ./configs/webpack.config.renderer.dev.dll.babel.js --colors",
    "build-e2e": "cross-env E2E_BUILD=true yarn build",
    "build-main": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.main.prod.babel.js --colors",
    "build-renderer": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.renderer.prod.babel.js --colors",
    "electron-rebuild": "electron-rebuild --parallel --force --types prod,dev,optional --module-dir app",
    "lint": "cross-env NODE_ENV=development eslint . --cache --ext .js,.jsx,.ts,.tsx",
    "lint-fix": "yarn --silent lint --fix; exit 0",
    "lint-styles": "stylelint --ignore-path .eslintignore '**/*.*(css|scss)' --syntax scss",
    "lint-styles-fix": "yarn --silent lint-styles --fix; exit 0",
    "package": "yarn build && electron-builder build --publish never",
    "package-all": "yarn build && electron-builder build -mwl",
    "package-ci": "yarn postinstall && yarn build && electron-builder --publish always",
    "package-mac": "yarn build && electron-builder build --mac",
    "package-linux": "yarn build && electron-builder build --linux",
    "package-win": "yarn build && electron-builder build --win --x64",
    "package-win:zip": "yarn package-win && node ./internals/scripts/GenerateZip.js",
    "postinstall": "node -r @babel/register internals/scripts/CheckNativeDep.js && electron-builder install-app-deps && yarn build-dll && opencollective-postinstall",
    "postlint-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{js,jsx,json,html,css,less,scss,yml}'",
    "postlint-styles-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{css,scss}'",
    "preinstall": "node ./internals/scripts/CheckYarn.js",
    "prestart": "yarn build",
    "start": "cross-env START_HOT=1 node -r @babel/register ./internals/scripts/CheckPortInUse.js && cross-env START_HOT=1 yarn start-renderer-dev",
    "start:prod": "cross-env NODE_ENV=production electron ./app/main.prod.js",
    "start-main-debug": "yarn start-main-dev --inspect=5858 --remote-debugging-port=9223",
    "start-main-dev": "cross-env START_HOT=1 NODE_ENV=development electron -r ./internals/scripts/BabelRegister ./app/main.dev.ts",
    "start-renderer-dev": "cross-env NODE_ENV=development webpack-dev-server --config configs/webpack.config.renderer.dev.babel.js",
    "test": "cross-env BABEL_DISABLE_CACHE=1 jest",
    "test-all": "yarn lint && yarn tsc && yarn build && yarn test",
    "test-e2e": "node -r @babel/register ./internals/scripts/CheckBuildsExist.js && cross-env NODE_ENV=test testcafe electron:./app ./test/e2e/HomePage.e2e.ts",
    "test-e2e-live": "node -r @babel/register ./internals/scripts/CheckBuildsExist.js && cross-env NODE_ENV=test testcafe --live electron:./app ./test/e2e/HomePage.e2e.ts",
    "test-watch": "yarn test --watch"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "cross-env NODE_ENV=development eslint --cache"
    ],
    "{*.json,.{babelrc,eslintrc,prettierrc,stylelintrc}}": [
      "prettier --ignore-path .eslintignore --parser json --write"
    ],
    "*.{css,scss}": [
      "stylelint --ignore-path .eslintignore --syntax scss --fix --allow-empty-input",
      "prettier --ignore-path .eslintignore --single-quote --write"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ]
  },
  "jest": {
    "testURL": "http://localhost/",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "jsx",
      "ts",
      "tsx",
      "json"
    ],
    "moduleDirectories": [
      "node_modules",
      "app/node_modules"
    ],
    "setupFiles": [
      "./internals/scripts/CheckBuildsExist.js"
    ]
  },
  "devDependencies": {
    "@amilajack/testcafe-browser-provider-electron": "^0.0.15-alpha.1",
    "@babel/core": "^7.26.7",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-decorators": "^7.25.9",
    "@babel/plugin-proposal-do-expressions": "^7.25.9",
    "@babel/plugin-proposal-export-default-from": "^7.25.9",
    "@babel/plugin-proposal-export-namespace-from": "^7.18.9",
    "@babel/plugin-proposal-function-bind": "^7.25.9",
    "@babel/plugin-proposal-function-sent": "^7.25.9",
    "@babel/plugin-proposal-json-strings": "^7.18.6",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.20.7",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
    "@babel/plugin-proposal-numeric-separator": "^7.18.6",
    "@babel/plugin-proposal-optional-chaining": "^7.21.0",
    "@babel/plugin-proposal-pipeline-operator": "^7.26.7",
    "@babel/plugin-proposal-throw-expressions": "^7.25.9",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-syntax-import-meta": "^7.10.4",
    "@babel/plugin-transform-react-constant-elements": "^7.25.9",
    "@babel/plugin-transform-react-inline-elements": "^7.25.9",
    "@babel/plugin-transform-runtime": "^7.25.9",
    "@babel/preset-env": "^7.26.7",
    "@babel/preset-react": "^7.26.3",
    "@babel/preset-typescript": "^7.26.0",
    "@babel/register": "^7.25.9",
    "@electron/rebuild": "^3.7.1",
    "@teamsupercell/typings-for-css-modules-loader": "^2.5.2",
    "@types/crypto-js": "^4.2.2",
    "@types/enzyme": "^3.10.18",
    "@types/enzyme-adapter-react-16": "^1.0.9",
    "@types/express": "^5.0.0",
    "@types/hidefile": "^3.0.3",
    "@types/history": "^4.7.11",
    "@types/jest": "^29.5.14",
    "@types/multer": "^1.4.12",
    "@types/needle": "^3.3.0",
    "@types/node": "^22.13.0",
    "@types/node-schedule": "^2.1.7",
    "@types/react": "^19.0.8",
    "@types/react-dom": "^19.0.3",
    "@types/react-modal": "^3.16.3",
    "@types/react-router": "^5.1.20",
    "@types/react-router-dom": "^5.3.3",
    "@types/react-test-renderer": "^19.0.0",
    "@types/sprintf-js": "^1.1.4",
    "@types/sqlite3": "^3.1.11",
    "@types/webpack": "^5.28.5",
    "@types/webpack-env": "^1.18.8",
    "@types/ws": "^8.5.14",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^29.7.0",
    "babel-loader": "^9.2.1",
    "babel-plugin-dev-expression": "^0.2.3",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "browserslist-config-erb": "^0.0.3",
    "chalk": "^5.4.1",
    "clean-webpack-plugin": "^4.0.0",
    "concurrently": "^9.1.2",
    "core-js": "^3.40.0",
    "cross-env": "^7.0.3",
    "css-loader": "^7.1.2",
    "detect-port": "^2.1.0",
    "electron": "^34.0.2",
    "electron-builder": "^25.1.8",
    "electron-devtools-installer": "^4.0.0",
    "electron-rebuild": "^3.2.9",
    "enzyme": "^3.11.0",
    "eslint": "^8.57.1",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-typescript": "^18.0.0",
    "eslint-plugin-compat": "^6.0.2",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jest": "^28.11.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-promise": "^7.2.1",
    "eslint-plugin-react": "^7.37.4",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-testcafe": "^0.2.1",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.6.3",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "lint-staged": "^15.4.3",
    "mini-css-extract-plugin": "^2.9.2",
    "node-sass": "^9.0.0",
    "opencollective-postinstall": "^2.0.3",
    "optimize-css-assets-webpack-plugin": "^6.0.1",
    "prettier": "^3.4.2",
    "react-test-renderer": "^19.0.0",
    "rimraf": "^6.0.1",
    "sass-loader": "^16.0.4",
    "style-loader": "^4.0.0",
    "stylelint": "^16.14.1",
    "stylelint-config-prettier": "^9.0.5",
    "stylelint-config-standard": "^37.0.0",
    "systeminformation": "^5.25.11",
    "terser-webpack-plugin": "^5.3.11",
    "testcafe": "^3.7.1",
    "testcafe-browser-provider-electron": "^0.0.21",
    "testcafe-react-selectors": "^5.0.3",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3",
    "url-loader": "^4.1.1",
    "webpack": "^5.97.1",
    "webpack-bundle-analyzer": "^4.10.2",
    "webpack-cli": "^6.0.1",
    "webpack-dev-server": "^5.2.0",
    "webpack-merge": "^6.0.1"
  },
  "dependencies": {
    "@hot-loader/react-dom": "^17.0.2",
    "crypto-js": "^4.2.0",
    "electron-debug": "^4.1.0",
    "electron-log": "^5.3.0",
    "electron-shutdown-command": "^2.0.1",
    "electron-updater": "^6.3.9",
    "express": "^4.21.2",
    "fs-extra": "^11.3.0",
    "hidefile": "^3.0.0",
    "history": "^5.3.0",
    "js-yaml": "^4.1.0",
    "jszip": "^3.10.1",
    "multer": "^1.4.5-lts.1",
    "needle": "^3.3.1",
    "node-schedule": "^2.1.1",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-hot-loader": "^4.13.1",
    "react-idle-timer": "^5.7.2",
    "react-modal": "^3.16.3",
    "react-router-dom": "^7.1.5",
    "react-toastify": "^11.0.3",
    "reflect-metadata": "^0.2.2",
    "regenerator-runtime": "^0.14.1",
    "source-map-support": "^0.5.21",
    "sprintf-js": "^1.1.3",
    "whatwg-fetch": "^3.6.20",
    "winston": "^3.17.0"
  },
  "devEngines": {
    "node": ">=20.18.1",
    "npm": ">=10.2.3",
    "yarn": ">=1.22.19"
  },
  "browserslist": [],
  "prettier": {
    "overrides": [
      {
        "files": [
          ".prettierrc",
          ".babelrc",
          ".eslintrc",
          ".stylelintrc"
        ],
        "options": {
          "parser": "json"
        }
      }
    ],
    "singleQuote": true
  },
  "stylelint": {
    "extends": [
      "stylelint-config-standard",
      "stylelint-config-prettier"
    ]
  },
  "renovate": {
    "extends": [
      "bliss"
    ],
    "baseBranches": [
      "next"
    ]
  },
  "husky": {
    "hooks": {
    }
  }
}
